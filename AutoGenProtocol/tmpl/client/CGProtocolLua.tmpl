{{.ClassName}} = class("{{.ClassName}}", LuaRequestPacket)

function {{.ClassName}}:Init()
    self:SetupGameServerPacket({{.ProtocolName}})
end

function {{.ClassName}}:WriteStream()
        {{- range .DataVar}}
        {{- if .VarIsArray }}
        {{- if ne .VarType "byte"}}
        for i=1, m_{{.VarValue}}Count do
        {{- end}}
        {{- end}}
        {{- if eq .VarType "ulong"}}
        {{if .VarIsArray}}    {{end}}index = WriteUInt64(self.m_{{.VarValue}});
        {{- else if eq .VarType "long"}}
        {{if .VarIsArray}}    {{end}}index = WriteInt64(self.m_{{.VarValue}});
        {{- else if eq .VarType "uint"}}
        {{if .VarIsArray}}    {{end}}index = WriteUInt32(self.m_{{.VarValue}});
        {{- else if eq .VarType "int"}}
        {{if .VarIsArray}}    {{end}}index = WriteInt32(self.m_{{.VarValue}});
        {{- else if eq .VarType "float"}}
        {{if .VarIsArray}}    {{end}}index = WriteSingle(self.m_{{.VarValue}});
        {{- else if eq .VarType "double"}}
        {{if .VarIsArray}}    {{end}}index = WriteDouble(self.m_{{.VarValue}});
        {{- else if eq .VarType "ushort"}}
        {{if .VarIsArray}}    {{end}}index = WriteUInt16(self.m_{{.VarValue}});
        {{- else if eq .VarType "short"}}
        {{if .VarIsArray}}    {{end}}index = WriteInt16(self.m_{{.VarValue}});
        {{- else if eq .VarType "bool"}}
        {{if .VarIsArray}}    {{end}}index = WriteBool(self.m_{{.VarValue}});
        {{- else if eq .VarType "string"}}
        {{if .VarIsArray}}    {{end}}local {{.VarValue}}len = PS.PASocketStreamAssist.GetStringBytesLen(self.m_{{.VarValue}}, false);
        {{if .VarIsArray}}    {{end}}index = WriteByte({{.VarValue}}len);
        {{if .VarIsArray}}    {{end}}index = WriteCharArray(self.m_{{.VarValue}}, {{.VarValue}}len, true, false);
        {{- else if eq .VarType "byte"}}
        {{- if .VarIsArray}}
        index = WriteBytes(self.m_{{.VarValue}}, m_{{.VarValue}}Count);
        {{- else}}
            index = WriteByte(self.m_{{.VarValue}});
        {{- end}}
        {{- else if eq .VarType "WorldPostion"}}
        {{if .VarIsArray}}    {{end}}index = WriteSingle(self.m_{{.VarValue}}.x);
        {{if .VarIsArray}}    {{end}}index = WriteSingle(self.m_{{.VarValue}}.z);
        {{- else if eq .VarType "Vector3"}}
        {{if .VarIsArray}}    {{end}}index = WriteSingle(self.m_{{.VarValue}}.x);
        {{if .VarIsArray}}    {{end}}index = WriteSingle(self.m_{{.VarValue}}.y);
        {{if .VarIsArray}}    {{end}}index = WriteSingle(self.m_{{.VarValue}}.z);
        {{- else if eq .VarType "Vector2"}}
        {{if .VarIsArray}}    {{end}}index = WriteSingle(self.m_{{.VarValue}}.x);
        {{if .VarIsArray}}    {{end}}index = WriteSingle(self.m_{{.VarValue}}.y);
        {{- end}}
        {{- if .VarIsArray}}
        {{- if ne .VarType "byte"}}
        end
        {{- end}}
        {{- end}}
        {{- end}}
end