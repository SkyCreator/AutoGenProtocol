#include "{{.ClassName}}.h"

BOOL {{.ClassName}}::Read( SocketInputStream& iStream )
{
__ENTER_FUNCTION
    {{- range .DataVar}}
    {{- if .VarIsArray}}
    {{- if .VarIsSpecialType}}
    {{.VarValue}}[i].Read(iStream);
    {{- else}}
    for ( INT i=0; i<{{.VarCount}}; ++i )
    {
        iStream.Read({{.VarValue}}[i], sizeof({{.VarType}}));
    }
    {{- end}}
    {{- else}}
    {{- if .VarIsSpecialType}}
    {{- .VarValue}}.Read(iStream);
    {{- else}}
    iStream.Read({{.VarValue}}, sizeof({{.VarType}}));
    {{- end}}
    {{- end}}
    {{- end}}
    return TRUE;
__LEAVE_FUNCTION
    return FALSE;
}

BOOL {{.ClassName}}::Write( SocketOutputStream& oStream ) const
{
__ENTER_FUNCTION
    {{- range .DataVar}}
    {{- if .VarIsArray}}
    {{- if .VarIsSpecialType}}
    {{.VarValue}}[i].Write(oStream);
    {{- else}}
    for ( INT i=0; i<{{.VarCount}}; ++i )
    {
        oStream.Write({{.VarValue}}[i], sizeof({{.VarType}}));
    }
    {{- end}}
    {{- else}}
    {{- if .VarIsSpecialType}}
    {{- .VarValue}}.Write(oStream);
    {{- else}}
    oStream.Write({{.VarValue}}, sizeof({{.VarType}}));
    {{- end}}
    {{- end}}
    {{- end}}
    return TRUE;
__LEAVE_FUNCTION
    return FALSE;
}

UINT {{.ClassName}}::Execute(Player* pPlayer)
{
__ENTER_FUNCTION   
    return {{.ClassName}}Handler::Execute(this, pPlayer);
__LEAVE_FUNCTION
    return FALSE;
}